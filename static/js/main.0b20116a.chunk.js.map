{"version":3,"sources":["components/Filters/SortBy.jsx","components/Filters/PrimaryReleaseYear.jsx","api/api.js","components/Filters/Genres.jsx","components/Filters/Pagination.jsx","components/Filters/Filters.jsx","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/App.jsx","index.js"],"names":["SortBy","this","props","sort_by","onChangeFilters","options","className","htmlFor","id","name","value","onChange","map","option","key","label","React","PureComponent","defaultProps","PrimaryReleaseYear","primary_release_year","API_URL","API_KEY_3","Genres","event","target","checked","with_genres","filter","genre","resetGenres","state","genresList","link","fetch","then","response","json","data","setState","genres","Fragment","type","onClick","includes","String","Pagination","nextPage","onChangePage","page","total_pages","prevPage","disabled","Filters","filters","Component","MovieItem","item","imagePath","backdrop_path","poster_path","src","alt","title","vote_average","release_date","MoviesList","getMovies","queryStringParams","api_key","language","length","join","queryString","stringify","responce","movies","results","prevProps","movie","App","newFilters","style","width","ReactDOM","render","document","getElementById"],"mappings":"8QACqBA,E,4JAsBjB,WACI,MAA8CC,KAAKC,MAA3CC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBAAiBC,EAAlC,EAAkCA,QAElC,OACI,yBAAKC,UAAU,cACX,2BAAOC,QAAQ,WAAf,YACA,4BACIC,GAAG,UACHF,UAAU,eACVG,KAAK,UACLC,MAAOP,EACPQ,SAAUP,GAETC,EAAQO,KAAI,SAACC,GAAD,OACT,4BAAQC,IAAKD,EAAOH,MAAOA,MAAOG,EAAOH,OACpCG,EAAOE,gB,GArCAC,IAAMC,eAArBjB,EACVkB,aAAe,CAClBb,QAAS,CACL,CACIU,MAAO,wBACPL,MAAO,mBAEX,CACIK,MAAO,uBACPL,MAAO,kBAEX,CACIK,MAAO,oBACPL,MAAO,qBAEX,CACIK,MAAO,mBACPL,MAAO,sB,ICjBFS,E,4JAsBjB,WACI,MAA2DlB,KAAKC,MAAxDkB,EAAR,EAAQA,qBAAsBhB,EAA9B,EAA8BA,gBAAiBC,EAA/C,EAA+CA,QAE/C,OACI,yBAAKC,UAAU,cACX,2BAAOC,QAAQ,wBAAf,kBACA,4BACIC,GAAG,uBACHF,UAAU,eACVG,KAAK,uBACLC,MAAOU,EACPT,SAAUP,GAETC,EAAQO,KAAI,SAACC,GAAD,OACT,4BAAQC,IAAKD,EAAOH,MAAOA,MAAOG,EAAOH,OACpCG,EAAOE,gB,GArCYC,IAAMC,eAAjCE,EACVD,aAAe,CAClBb,QAAS,CACL,CACIU,MAAO,OACPL,MAAO,QAEX,CACIK,MAAO,OACPL,MAAO,QAEX,CACIK,MAAO,OACPL,MAAO,QAEX,CACIK,MAAO,OACPL,MAAO,U,YClBVW,EAAU,+BAEVC,EAAY,mCCCJC,E,kDACjB,aAAe,IAAD,8BACV,gBAoBJZ,SAAW,SAACa,GACR,EAAKtB,MAAME,gBAAgB,CACvBqB,OAAQ,CACJhB,KAAM,cACNC,MAAOc,EAAMC,OAAOC,QAAb,sBACG,EAAKxB,MAAMyB,aADd,CAC2BH,EAAMC,OAAOf,QACzC,EAAKR,MAAMyB,YAAYC,QACnB,SAACC,GAAD,OAAWA,IAAUL,EAAMC,OAAOf,aA5B1C,EAkCdoB,YAAc,WACV,EAAK5B,MAAME,gBAAgB,CACvBqB,OAAQ,CACJhB,KAAM,cACNC,MAAO,OAnCf,EAAKqB,MAAQ,CACTC,WAAY,IAJN,E,qDAQd,WAAqB,IAAD,OACVC,EAAI,UAAMZ,EAAN,qCAA0CC,EAA1C,mBACVY,MAAMD,GACDE,MAAK,SAACC,GACH,OAAOA,EAASC,UAEnBF,MAAK,SAACG,GACH,EAAKC,SAAS,CACVP,WAAYM,EAAKE,c,oBA2BjC,WAAU,IAAD,OACGR,EAAe/B,KAAK8B,MAApBC,WACAL,EAAgB1B,KAAKC,MAArByB,YAER,OACI,kBAAC,IAAMc,SAAP,KACI,yBAAKnC,UAAU,cACX,6BACI,4BACIoC,KAAK,SACLpC,UAAU,4BACVqC,QAAS1C,KAAK6B,aAHlB,oBAQHE,EAAWpB,KAAI,SAACiB,GAAD,OACZ,yBAAKf,IAAKe,EAAMrB,GAAIF,UAAU,cAC1B,2BACIA,UAAU,mBACVoC,KAAK,WACLhC,MAAOmB,EAAMrB,GACbA,GAAE,eAAUqB,EAAMrB,IAClBG,SAAU,EAAKA,SACfe,QAASC,EAAYiB,SAASC,OAAOhB,EAAMrB,OAE/C,2BACIF,UAAU,mBACVC,QAAO,eAAUsB,EAAMrB,KAEtBqB,EAAMpB,gB,GA1EHO,IAAMC,eCDrB6B,E,4MACjBC,SAAW,WACP,EAAK7C,MAAM8C,aAAa,CACpBC,KAAM,EAAK/C,MAAM+C,KAAO,EACxBC,YAAa,EAAKhD,MAAMgD,e,EAIhCC,SAAW,WACP,EAAKjD,MAAM8C,aAAa,CACpBC,KAAM,EAAK/C,MAAM+C,KAAO,EACxBC,YAAa,EAAKhD,MAAMgD,e,4CAIhC,WACI,MAA8BjD,KAAKC,MAA3B+C,EAAR,EAAQA,KAAMC,EAAd,EAAcA,YAEd,OACI,yBAAK5C,UAAU,gEACX,yBAAKA,UAAU,aACX,4BACIoC,KAAK,SACLpC,UAAU,gBACV8C,SAAmB,IAATH,EACVN,QAAS1C,KAAKkD,UAJlB,aAQA,4BACIT,KAAK,SACLpC,UAAU,gBACV8C,SAAUH,IAASC,EACnBP,QAAS1C,KAAK8C,UAJlB,cASJ,8BACKE,EADL,OACeC,Q,GAvCSlC,IAAMC,eCIzBoC,E,4JACjB,WACI,MAMIpD,KAAKC,MANT,IACIoD,QAAWnD,EADf,EACeA,QAASiB,EADxB,EACwBA,qBAAsBO,EAD9C,EAC8CA,YAC1CsB,EAFJ,EAEIA,KACAC,EAHJ,EAGIA,YACA9C,EAJJ,EAIIA,gBACA4C,EALJ,EAKIA,aAGJ,OACI,0BAAM1C,UAAU,OACZ,kBAAC,EAAD,CAAQH,QAASA,EAASC,gBAAiBA,IAE3C,kBAAC,EAAD,CACIgB,qBAAsBA,EACtBhB,gBAAiBA,IAGrB,kBAAC,EAAD,CAAQuB,YAAaA,EAAavB,gBAAiBA,IAEnD,kBAAC,EAAD,CACI6C,KAAMA,EACNC,YAAaA,EACbF,aAAcA,S,GAxBGhC,IAAMuC,WCJtBC,E,4JACjB,WACI,IAAQC,EAASxD,KAAKC,MAAduD,KACFC,EAAYD,EAAKE,eAAiBF,EAAKG,YAE7C,OACI,yBAAKtD,UAAU,QACX,yBACIA,UAAU,gCACVuD,IACIH,EAAS,yCAC+BA,GAClC,iBAEVI,IAAI,WAER,yBAAKxD,UAAU,aACX,wBAAIA,UAAU,cAAcmD,EAAKM,OACjC,yBAAKzD,UAAU,aAAf,SAAkCmD,EAAKO,cACvC,yBAAK1D,UAAU,qBAAf,SAA0CmD,EAAKQ,oB,GAnB5BjD,IAAMuC,W,iBCGxBW,E,kDACjB,aAAe,IAAD,8BACV,gBAOJC,UAAY,SAACb,EAASL,GAClB,IAAQ9C,EAA+CmD,EAA/CnD,QAASiB,EAAsCkC,EAAtClC,qBAAsBO,EAAgB2B,EAAhB3B,YACjCyC,EAAoB,CACtBC,QAAS/C,EACTgD,SAAU,QACVnE,QAASA,EACT8C,KAAMA,EACN7B,qBAAsBA,GAGtBO,EAAY4C,OAAS,IAAGH,EAAkBzC,YAAcA,EAAY6C,KAAK,MAE7E,IAAMvC,EAAI,UAAMZ,EAAN,2BAAgCoD,IAAYC,UAClDN,IAKJlC,MAAMD,GACDE,MAAK,SAACwC,GACH,OAAOA,EAAStC,UAEnBF,MAAK,SAACG,GACH,EAAKpC,MAAM8C,aAAa,CACpBC,KAAMX,EAAKW,KACXC,YAAaZ,EAAKY,cAEtB,EAAKX,SAAS,CACVqC,OAAQtC,EAAKuC,QACb7C,WAAYM,EAAKE,aAlC7B,EAAKT,MAAQ,CACT6C,OAAQ,IAJF,E,qDA0Cd,WACI3E,KAAKkE,UAAUlE,KAAKC,MAAMoD,QAASrD,KAAKC,MAAM+C,Q,gCASlD,SAAmB6B,GACX7E,KAAKC,MAAMoD,QAAQnD,UAAY2E,EAAUxB,QAAQnD,UACjDF,KAAKC,MAAM8C,aAAa,GACxB/C,KAAKkE,UAAUlE,KAAKC,MAAMoD,QAAS,IAGnCrD,KAAKC,MAAM+C,OAAS6B,EAAU7B,MAC9BhD,KAAKkE,UAAUlE,KAAKC,MAAMoD,QAASrD,KAAKC,MAAM+C,KAAMhD,KAAKC,MAAMyB,aAI/D1B,KAAKC,MAAMoD,QAAQlC,uBACnB0D,EAAUxB,QAAQlC,sBAElBnB,KAAKkE,UAAUlE,KAAKC,MAAMoD,QAASrD,KAAKC,MAAM+C,KAAMhD,KAAKC,MAAMyB,aAG/D1B,KAAKC,MAAMoD,QAAQ3B,cAAgBmD,EAAUxB,QAAQ3B,aACrD1B,KAAKkE,UAAUlE,KAAKC,MAAMoD,QAASrD,KAAKC,MAAM+C,KAAMhD,KAAKC,MAAMyB,e,oBAIvE,WACI,IAAQiD,EAAW3E,KAAK8B,MAAhB6C,OACR,OACI,yBAAKtE,UAAU,OACVsE,EAAOhE,KAAI,SAACmE,GACT,OACI,yBAAKjE,IAAKiE,EAAMvE,GAAIF,UAAU,cAC1B,kBAAC,EAAD,CAAWmD,KAAMsB,a,GAlFLxB,aCDnByB,E,kDACjB,aAAe,IAAD,8BACV,gBAaJ5E,gBAAkB,SAACoB,GACf,IAAMyD,EAAU,2BACT,EAAKlD,MAAMuB,SADF,kBAEX9B,EAAMC,OAAOhB,KAAOe,EAAMC,OAAOf,QAEtC,EAAK6B,SAAS,CACVe,QAAS2B,KApBH,EAwBdjC,aAAe,YAAqD,IAAlDC,EAAiD,EAAjDA,KAAiD,IAA3CC,mBAA2C,MAA7B,EAAKnB,MAAMmB,YAAkB,EAC/D,EAAKX,SAAS,CAEVU,OACAC,iBAzBJ,EAAKnB,MAAQ,CACTuB,QAAS,CACLnD,QAAS,kBACTiB,qBAAsB,OACtBO,YAAa,IAEjBsB,KAAM,EACNC,YAAa,IAVP,E,0CAgCd,WACI,MAAuCjD,KAAK8B,MAApCuB,EAAR,EAAQA,QAASL,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,YAEvB,OACI,yBAAK5C,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,OAAO4E,MAAO,CAAEC,MAAO,SAClC,yBAAK7E,UAAU,aACX,wCACA,kBAAC,EAAD,CACI2C,KAAMA,EACNC,YAAaA,EACbI,QAASA,EACTlD,gBAAiBH,KAAKG,gBACtB4C,aAAc/C,KAAK+C,kBAKnC,yBAAK1C,UAAU,SACX,kBAAC,EAAD,CACIgD,QAASA,EACTL,KAAMA,EACND,aAAc/C,KAAK+C,sB,GAzDdhC,IAAMuC,W,YCEvC6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0b20116a.chunk.js","sourcesContent":["import React from \"react\";\r\nexport default class SortBy extends React.PureComponent {\r\n    static defaultProps = {\r\n        options: [\r\n            {\r\n                label: \"Popularity descending\",\r\n                value: \"popularity.desc\",\r\n            },\r\n            {\r\n                label: \"Popularity ascending\",\r\n                value: \"popularity.asc\",\r\n            },\r\n            {\r\n                label: \"Rating descending\",\r\n                value: \"vote_average.desc\",\r\n            },\r\n            {\r\n                label: \"Rating ascending\",\r\n                value: \"vote_average.asc\",\r\n            },\r\n        ],\r\n    };\r\n\r\n    render() {\r\n        const { sort_by, onChangeFilters, options } = this.props;\r\n\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"sort_by\">Sort by:</label>\r\n                <select\r\n                    id=\"sort_by\"\r\n                    className=\"form-control\"\r\n                    name=\"sort_by\"\r\n                    value={sort_by}\r\n                    onChange={onChangeFilters}\r\n                >\r\n                    {options.map((option) => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nexport default class PrimaryReleaseYear extends React.PureComponent {\r\n    static defaultProps = {\r\n        options: [\r\n            {\r\n                label: \"2022\",\r\n                value: \"2022\",\r\n            },\r\n            {\r\n                label: \"2021\",\r\n                value: \"2021\",\r\n            },\r\n            {\r\n                label: \"2020\",\r\n                value: \"2020\",\r\n            },\r\n            {\r\n                label: \"2019\",\r\n                value: \"2019\",\r\n            },\r\n        ],\r\n    };\r\n\r\n    render() {\r\n        const { primary_release_year, onChangeFilters, options } = this.props;\r\n\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"primary_release_year\">Release Year :</label>\r\n                <select\r\n                    id=\"primary_release_year\"\r\n                    className=\"form-control\"\r\n                    name=\"primary_release_year\"\r\n                    value={primary_release_year}\r\n                    onChange={onChangeFilters}\r\n                >\r\n                    {options.map((option) => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"88fa8ee43cb29baa5a50bfd05010c8ff\";\r\n","import React from \"react\";\r\nimport { API_KEY_3, API_URL } from \"../../api/api\";\r\n\r\nexport default class Genres extends React.PureComponent {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            genresList: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const link = `${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=en-US`;\r\n        fetch(link)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                this.setState({\r\n                    genresList: data.genres,\r\n                });\r\n            });\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.props.onChangeFilters({\r\n            target: {\r\n                name: \"with_genres\",\r\n                value: event.target.checked\r\n                    ? [...this.props.with_genres, event.target.value]\r\n                    : this.props.with_genres.filter(\r\n                          (genre) => genre !== event.target.value\r\n                      ),\r\n            },\r\n        });\r\n    };\r\n\r\n    resetGenres = () => {\r\n        this.props.onChangeFilters({\r\n            target: {\r\n                name: \"with_genres\",\r\n                value: [],\r\n            },\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { genresList } = this.state;\r\n        const { with_genres } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"form-group\">\r\n                    <div>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-dark mb-1\"\r\n                            onClick={this.resetGenres}\r\n                        >\r\n                            Show All Genres\r\n                        </button>\r\n                    </div>\r\n                    {genresList.map((genre) => (\r\n                        <div key={genre.id} className=\"form-check\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                value={genre.id}\r\n                                id={`genre${genre.id}`}\r\n                                onChange={this.onChange}\r\n                                checked={with_genres.includes(String(genre.id))}\r\n                            />\r\n                            <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor={`genre${genre.id}`}\r\n                            >\r\n                                {genre.name}\r\n                            </label>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Pagination extends React.PureComponent {\r\n    nextPage = () => {\r\n        this.props.onChangePage({\r\n            page: this.props.page + 1,\r\n            total_pages: this.props.total_pages,\r\n        });\r\n    };\r\n\r\n    prevPage = () => {\r\n        this.props.onChangePage({\r\n            page: this.props.page - 1,\r\n            total_pages: this.props.total_pages,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { page, total_pages } = this.props;\r\n\r\n        return (\r\n            <nav className=\"form-group d-flex justify-content-between align-items-center\">\r\n                <div className=\"btn-group\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-light\"\r\n                        disabled={page === 1}\r\n                        onClick={this.prevPage}\r\n                    >\r\n                        &laquo; Prev\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-light\"\r\n                        disabled={page === total_pages}\r\n                        onClick={this.nextPage}\r\n                    >\r\n                        Next &raquo;\r\n                    </button>\r\n                </div>\r\n                <span>\r\n                    {page} of {total_pages}\r\n                </span>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport SortBy from \"./SortBy\";\r\nimport PrimaryReleaseYear from \"./PrimaryReleaseYear\";\r\nimport Genres from \"./Genres\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nexport default class Filters extends React.Component {\r\n    render() {\r\n        const {\r\n            filters: { sort_by, primary_release_year, with_genres },\r\n            page,\r\n            total_pages,\r\n            onChangeFilters,\r\n            onChangePage,\r\n        } = this.props;\r\n\r\n        return (\r\n            <form className=\"mb3\">\r\n                <SortBy sort_by={sort_by} onChangeFilters={onChangeFilters} />\r\n\r\n                <PrimaryReleaseYear\r\n                    primary_release_year={primary_release_year}\r\n                    onChangeFilters={onChangeFilters}\r\n                />\r\n\r\n                <Genres with_genres={with_genres} onChangeFilters={onChangeFilters} />\r\n\r\n                <Pagination\r\n                    page={page}\r\n                    total_pages={total_pages}\r\n                    onChangePage={onChangePage}\r\n                />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class MovieItem extends React.Component {\r\n    render() {\r\n        const { item } = this.props;\r\n        const imagePath = item.backdrop_path || item.poster_path;\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                <img\r\n                    className=\"card-img-top card-img--height\"\r\n                    src={\r\n                        imagePath\r\n                            ? `https://image.tmdb.org/t/p/w500${imagePath}`\r\n                            : \"missing poster\"\r\n                    }\r\n                    alt=\"poster\"\r\n                />\r\n                <div className=\"card-body\">\r\n                    <h6 className=\"card-title\">{item.title}</h6>\r\n                    <div className=\"card-text\">Rate: {item.vote_average}</div>\r\n                    <div className=\"card-release_date\">Year: {item.release_date}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MovieItem from \"./MovieItem\";\r\nimport { API_URL, API_KEY_3 } from \"../../api/api\";\r\nimport queryString from \"query-string\";\r\n\r\nexport default class MoviesList extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            movies: [],\r\n        };\r\n    }\r\n\r\n    getMovies = (filters, page) => {\r\n        const { sort_by, primary_release_year, with_genres } = filters;\r\n        const queryStringParams = {\r\n            api_key: API_KEY_3,\r\n            language: \"en-US\",\r\n            sort_by: sort_by,\r\n            page: page,\r\n            primary_release_year: primary_release_year,\r\n        };\r\n\r\n        if (with_genres.length > 0) queryStringParams.with_genres = with_genres.join(\",\");\r\n\r\n        const link = `${API_URL}/discover/movie?${queryString.stringify(\r\n            queryStringParams\r\n        )}`;\r\n\r\n        /*  const link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&language=en-US&sort_by=${sort_by}&page=${page}&primary_release_year=${primary_release_year}&with_genres=${with_genres}`; */\r\n\r\n        fetch(link)\r\n            .then((responce) => {\r\n                return responce.json();\r\n            })\r\n            .then((data) => {\r\n                this.props.onChangePage({\r\n                    page: data.page,\r\n                    total_pages: data.total_pages,\r\n                });\r\n                this.setState({\r\n                    movies: data.results,\r\n                    genresList: data.genres,\r\n                });\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getMovies(this.props.filters, this.props.page);\r\n    }\r\n\r\n    /*     UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if (nextProps.filters.sort_by !== this.props.filters.sort_by) {\r\n            this.getMovies(nextProps.filters);\r\n        }\r\n    } */\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.filters.sort_by !== prevProps.filters.sort_by) {\r\n            this.props.onChangePage(1);\r\n            this.getMovies(this.props.filters, 1);\r\n        }\r\n\r\n        if (this.props.page !== prevProps.page) {\r\n            this.getMovies(this.props.filters, this.props.page, this.props.with_genres);\r\n        }\r\n\r\n        if (\r\n            this.props.filters.primary_release_year !==\r\n            prevProps.filters.primary_release_year\r\n        ) {\r\n            this.getMovies(this.props.filters, this.props.page, this.props.with_genres);\r\n        }\r\n\r\n        if (this.props.filters.with_genres !== prevProps.filters.with_genres) {\r\n            this.getMovies(this.props.filters, this.props.page, this.props.with_genres);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { movies } = this.state;\r\n        return (\r\n            <div className=\"row\">\r\n                {movies.map((movie) => {\r\n                    return (\r\n                        <div key={movie.id} className=\"col-6 mb-4\">\r\n                            <MovieItem item={movie} />\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Filters from \"./Filters/Filters\";\r\nimport MoviesList from \"./Movies/MoviesList\";\r\n\r\nexport default class App extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            filters: {\r\n                sort_by: \"popularity.desc\",\r\n                primary_release_year: \"2022\",\r\n                with_genres: [],\r\n            },\r\n            page: 1,\r\n            total_pages: \"\",\r\n        };\r\n    }\r\n\r\n    onChangeFilters = (event) => {\r\n        const newFilters = {\r\n            ...this.state.filters,\r\n            [event.target.name]: event.target.value,\r\n        };\r\n        this.setState({\r\n            filters: newFilters,\r\n        });\r\n    };\r\n\r\n    onChangePage = ({ page, total_pages = this.state.total_pages }) => {\r\n        this.setState({\r\n            // page: page\r\n            page,\r\n            total_pages,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { filters, page, total_pages } = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col-4\">\r\n                        <div className=\"card\" style={{ width: \"100%\" }}>\r\n                            <div className=\"card-body\">\r\n                                <h3>Filters:</h3>\r\n                                <Filters\r\n                                    page={page}\r\n                                    total_pages={total_pages}\r\n                                    filters={filters}\r\n                                    onChangeFilters={this.onChangeFilters}\r\n                                    onChangePage={this.onChangePage}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <MoviesList\r\n                            filters={filters}\r\n                            page={page}\r\n                            onChangePage={this.onChangePage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./stylesheets/index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}